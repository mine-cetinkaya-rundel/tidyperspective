---
title: "bir eğitimcinin perspektifinden tidyverse"
author: "mine çetinkaya-rundel"
subtitle: "[bit.ly/tidyperspective-whyR-tr](https://bit.ly/whyR-tr)"
format:
  revealjs:
    theme: theme.scss
    transition: fade
    background-transition: fade
    highlight-style: ayu-mirage
code-link: true
execute:
  echo: true
  freeze: auto
---

# merhaba

```{r}
#| echo: false
library(tidyverse)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)

options(dplyr.print_min = 6, dplyr.print_max = 6)
theme_set(theme_gray(base_size = 18))
```

## bu projeye katkıda bulunanlar

-   Johanna Hardin, Pomona College
-   Benjamin S. Baumer, Smith College
-   Amelia McNamara, University of St Thomas
-   Nicholas J. Horton, Amherst College
-   Colin W. Rundel, Duke University

## varsayımlar

::: columns
::: {.column width="50%" style="text-align: center;"}
![](images/icons8-code-64.png)

**varsayım 1:**

otantik araçları öğretmeliyiz
:::

::: {.column width="50%" style="text-align: center;"}
![](images/icons8-code-R-64.png)

**varsayım 2:**

otantik araç olarak R öğretelim
:::
:::

## akılda kalması gereken

<br><br>

> tidyverse tüm seviyelerdeki lisans öğrencileri için veri bilimi döngüsü boyunca ihtiyaç duyulan bilişimsel becerilerini ve düşünmeyi kazanmaları için etkili ve verimli bir yol sağlar.

::: aside
Çetinkaya-Rundel, M., Hardin, J., Baumer, B. S., McNamara, A., Horton, N. J., & Rundel, C.
(2021).
An educator's perspective of the tidyverse.
arXiv preprint arXiv:2108.03510.
[arxiv.org/abs/2108.03510](https://arxiv.org/abs/2108.03510)
:::

# tidyverse ilkeleri

## tidyverse

::: columns
::: {.column width="80%"}
-   çağrıldığında sekiz çekirdek paketi yükleyen ve ayrıca kurulum sırasında çok sayıda başka paketi bir araya getiren meta R paketi
-   tidyverse paketleri bir tasarım felsefesini, ortak dil bilgisini, ve veri yapılarını paylaşır
:::

::: {.column width="20%"}
![](images/tidyverse.png){fig-align="center"}
:::
:::

![](images/data-science.png){fig-align="center"}

## örneklerde kullanılacak veri

**data:** peer-to-peer lending platformu olan *Lending Club*'dan binlerce borçlanma ile ilgili veri, **openintro** paketinden, birkaç değişiklikle

```{r}
library(tidyverse)
library(openintro)

loans <- loans_full_schema %>%
  mutate(
    homeownership = str_to_title(homeownership), 
    bankruptcy = if_else(public_record_bankrupt >= 1, "Yes", "No")
  ) %>%
  filter(annual_income >= 10) %>%
  select(
    loan_amount, homeownership, bankruptcy,
    application_type, annual_income, interest_rate
  )
```

## `loans`

```{r}
glimpse(loans)
```

# tidyverse ile R eğitimi

## hedefler

1.  **gruplandırılmış özetleme:** Başvuranların ev sahipliği durumuna göre, ortalama borçlanma tutarını ve başvuran sayısını hesaplayın. Sonuçları azalan ortalama borçlanma tutarına göre görüntüleyin.
2.  **veri görselleştirme:**
    -   Borçlanma tutarı ile başvuru türü arasındaki ilişkiyi ev sahipliğine göre gösteren yan yana kutu grafikleri oluşturun.

    -   Faiz oranı ile yıllık gelir arasındaki ilişkiyi başvuranın iflasına bağlı olarak gözünüzde canlandırın.

## hedef: gruplandırılmış özetleme

::: goal
Başvuranların ev sahipliği durumuna göre, ortalama borçlanma tutarını ve başvuran sayısını hesaplayın.
Sonuçları azalan ortalama borçlanma tutarına göre görüntüleyin.
:::

<br>

::: small
```{r}
#| echo: false

loans %>%
  group_by(homeownership) %>% 
  summarize(
    avg_loan_amount = mean(loan_amount),
    n_applicants = n()
    ) %>%
  arrange(desc(avg_loan_amount)) %>%
  mutate(
    n_applicants = number(n_applicants, big.mark = ","),
    avg_loan_amount = dollar(avg_loan_amount, accuracy = 1)
    ) %>%
  kable(
    col.names = c("Homeownership", "Number of applicants", "Average loan amount"),
    align = "lrr"
    )
```
:::

## adım adım I

::: columns
::: {.column width="40%"}
Başvuranların ev sahipliği durumuna göre, ortalama borçlanma tutarını ve başvuran sayısını hesaplayın.
Sonuçları azalan ortalama borçlanma tutarına göre görüntüleyin.
:::

::: {.column width="60%"}
```{r}
loans
```
:::
:::

## adım adım II

::: columns
::: {.column width="40%"}
[Başvuranların ev sahipliği durumuna göre]{style="font-weight:bold;background-color:#ccddeb;"}, ortalama borçlanma tutarını ve başvuran sayısını hesaplayın.
Sonuçları azalan ortalama borçlanma tutarına göre görüntüleyin.
:::

::: {.column width="60%"}
::: {.fragment fragment-index="2"}
::: in-out
**\[input\]** veri çerçevesi
:::
:::

::: {.fragment fragment-index="3"}
```{r}
#| code-line-numbers: "2"

loans %>%
  group_by(homeownership)
```
:::

::: {.fragment fragment-index="4"}
::: {.in-out style="text-align: right;"}
veri çerçevesi **\[output\]**
:::
:::
:::
:::

## adım adım III

::: columns
::: {.column width="40%"}
Başvuranların ev sahipliği durumuna göre, [ortalama borçlanma tutarını]{style="font-weight:bold;background-color:#ccddeb;"} ve başvuran sayısını [hesaplayın]{style="font-weight:bold;background-color:#ccddeb;"}.
Sonuçları azalan ortalama borçlanma tutarına göre görüntüleyin.
:::

::: {.column width="60%"}
```{r}
#| code-line-numbers: "3-5"

loans %>%
  group_by(homeownership) %>% 
  summarize(
    avg_loan_amount = mean(loan_amount)
    )
```
:::
:::

## adım adım IV

::: columns
::: {.column width="40%"}
Başvuranların ev sahipliği durumuna göre, ortalama borçlanma tutarını ve [başvuran sayısını hesaplayın]{style="font-weight:bold;background-color:#ccddeb;"}.
Sonuçları azalan ortalama borçlanma tutarına göre görüntüleyin.
:::

::: {.column width="60%"}
```{r}
#| code-line-numbers: "5"

loans %>%
  group_by(homeownership) %>% 
  summarize(
    avg_loan_amount = mean(loan_amount),
    n_applicants = n()
    )
```
:::
:::

## adım adım V

::: columns
::: {.column width="40%"}
Başvuranların ev sahipliği durumuna göre, ortalama borçlanma tutarını ve başvuran sayısını hesaplayın.
[Sonuçları azalan ortalama borçlanma tutarına göre görüntüleyin]{style="font-weight:bold;background-color:#ccddeb;"}.
:::

::: {.column width="60%"}
```{r}
#| code-line-numbers: "7"

loans %>%
  group_by(homeownership) %>% 
  summarize(
    avg_loan_amount = mean(loan_amount),
    n_applicants = n()
    ) %>%
  arrange(desc(avg_loan_amount))
```
:::
:::

## hep beraber

::: in-out
**\[input\]** veri çerçevesi
:::

```{r}
loans %>%
  group_by(homeownership) %>% 
  summarize(
    avg_loan_amount = mean(loan_amount),
    n_applicants = n()
    ) %>%
  arrange(desc(avg_loan_amount))
```

::: in-out
**\[output\]** veri çerçevesi
:::

## alternatif: `aggregate()`

```{r}
res1 <- aggregate(loan_amount ~ homeownership, 
                  data = loans, FUN = length)
res1

names(res1)[2] <- "n_applicants"
res1
```

## `aggregate()` ile gruplandırılmış özet

```{r}
res2 <- aggregate(loan_amount ~ homeownership, 
                  data = loans, FUN = mean)
names(res2)[2] <- "avg_loan_amount"

res2
```

. . .

```{r}
res <- merge(res1, res2)
res[order(res$avg_loan_amount, decreasing = TRUE), ]
```

## `aggregate()` ile gruplandırılmış özet

::: small
```{r}
#| eval: false

res1 <- aggregate(loan_amount ~ homeownership, data = loans, FUN = length)
names(res1)[2] <- "n_applicants"
res2 <- aggregate(loan_amount ~ homeownership, data = loans, FUN = mean)
names(res2)[2] <- "avg_loan_amount"
res <- merge(res1, res2)
res[order(res$avg_loan_amount, decreasing = TRUE), ]
```
:::

. . .

-   😀 giren ve çıkan veri çerçevesi
-   😕 bütün bunlari tanıtmak gerekiyor:
    -   formül sözdizimi (formula syntax)

    -   fonksiyonları argüman olarak iletme

    -   veri cercevelerini birleştirme

    -   satırlara erişmek için köşeli parantez gösterimi

## alternatif: `tapply()`

```{r}
sort(
  tapply(loans$loan_amount, loans$homeownership, mean),
  decreasing = TRUE
  )
```

. . .

<br>

😕 :

-   fonksiyonları argüman olarak iletme

-   çeşitli 'apply()' fonksiyonlarıni ayırmak

-   yeni bir veri yapısı ile biten (`array`)

-   iç içe işlevleri okuma

## hedef: veri görselleştirme

::: goal
Borçlanma tutarı ile başvuru türü arasındaki ilişkiyi ev sahipliğine göre gösteren yan yana kutu grafikleri oluşturun.
:::

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 12

ggplot(loans, 
         aes(x = application_type, y = loan_amount)) +
  geom_boxplot() +
  facet_wrap(~ homeownership) +
  theme_minimal(base_size = 18) +
  scale_y_continuous(labels = label_dollar()) +
  labs(x = "Application type", y = "Loan amount")
```

## adım adım I

::: columns
::: {.column width="40%"}
[**Borçlanma tutarı ile başvuru türü arasındaki ilişkiyi**]{style="font-weight:bold;background-color:#ccddeb;"} ev sahipliğine göre [gösteren yan yana kutu grafikleri oluşturun.]{style="font-weight:bold;background-color:#ccddeb;"}
:::

::: {.column width="60%"}
```{r}
#| code-line-numbers: "1"

ggplot(loans)
```
:::
:::

## adım adım II

::: columns
::: {.column width="40%"}
[Borçlanma tutarı ile başvuru türü arasındaki ilişkiyi]{style="font-weight:bold;background-color:#ccddeb;"} ev sahipliğine göre [gösteren yan yana kutu grafikleri oluşturun.]{style="font-weight:bold;background-color:#ccddeb;"}
:::

::: {.column width="60%"}
```{r}
#| code-line-numbers: "2"

ggplot(loans, 
       aes(x = application_type))
```
:::
:::

## adım adım III

::: columns
::: {.column width="40%"}
[Borçlanma tutarı ile başvuru türü arasındaki ilişkiyi]{style="font-weight:bold;background-color:#ccddeb;"} ev sahipliğine göre [gösteren yan yana kutu grafikleri oluşturun.]{style="font-weight:bold;background-color:#ccddeb;"}
:::

::: {.column width="60%"}
```{r}
#| code-line-numbers: "3"

ggplot(loans, 
       aes(x = application_type,
           y = loan_amount))
```
:::
:::

## adım adım IV

::: columns
::: {.column width="40%"}
[Borçlanma tutarı ile başvuru türü arasındaki ilişkiyi]{style="font-weight:bold;background-color:#ccddeb;"} ev sahipliğine göre [gösteren yan yana kutu grafikleri oluşturun.]{style="font-weight:bold;background-color:#ccddeb;"}
:::

::: {.column width="60%"}
```{r}
#| code-line-numbers: "4"

ggplot(loans, 
       aes(x = application_type,
           y = loan_amount)) +
  geom_boxplot()
```
:::
:::

## adım adım IV

::: columns
::: {.column width="40%"}
Borçlanma tutarı ile başvuru türü arasındaki ilişkiyi [ev sahipliğine göre]{style="font-weight:bold;background-color:#ccddeb;"} gösteren yan yana kutu grafikleri oluşturun.
:::

::: {.column width="60%"}
```{r}
#| code-line-numbers: "5"

ggplot(loans, 
       aes(x = application_type,
           y = loan_amount)) +
  geom_boxplot() +
  facet_wrap(~ homeownership)
```
:::
:::

## `ggplot()` ile görselleştirme

```{r}
#| eval: false

ggplot(loans, 
       aes(x = application_type, y = loan_amount)) +
  geom_boxplot() +
  facet_wrap(~ homeownership)
```

. . .

-   her katman geçerli bir görselleştirme üretiyor
-   üçüncü bir değişkenle facet oluşturma yalnızca bir yeni fonksiyon gerektiriyor

## alternatif: `boxplot()`

```{r}
levels <- sort(unique(loans$homeownership))
levels

loans1 <- loans[loans$homeownership == levels[1],]
loans2 <- loans[loans$homeownership == levels[2],]
loans3 <- loans[loans$homeownership == levels[3],]
```

## `boxplot()` ile görselleştirme

```{r}
par(mfrow = c(1, 3))

boxplot(loan_amount ~ application_type, 
        data = loans1, main = levels[1])
boxplot(loan_amount ~ application_type, 
        data = loans2, main = levels[2])
boxplot(loan_amount ~ application_type, 
        data = loans3, main = levels[3])
```

## hedef: farklı bir ilişkiyi görselleştirmek

::: goal
Faiz oranı ile yıllık gelir arasındaki ilişkiyi başvuranın iflasına bağlı olarak gözünüzde canlandırın.
:::

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 12

ggplot(loans, 
       aes(y = interest_rate, x = annual_income, 
           color = bankruptcy)) +
  geom_point(alpha = 0.1) + 
  geom_smooth(method = "lm", linewidth = 2, se = FALSE) + 
  scale_x_log10(labels = scales::label_dollar()) +
  scale_y_continuous(labels = scales::label_percent(scale = 1)) +
  scale_color_OkabeIto() +
  labs(x = "Annual Income", y = "Interest Rate", 
       color = "Previous\nBankruptcy") +
  theme_minimal(base_size = 18)
```

## `ggplot()` ile görselleştirme

```{r}
#| fig-align: center
#| fig-width: 12
#| code-line-numbers: "|4|5|6"

ggplot(loans, 
       aes(y = interest_rate, x = annual_income, 
           color = bankruptcy)) +
  geom_point(alpha = 0.1) + 
  geom_smooth(method = "lm", linewidth = 2, se = FALSE) + 
  scale_x_log10()
```

## `ggplot()` ile özelleştirme

```{r}
#| fig-align: center
#| fig-width: 12
#| code-line-numbers: "|6|7|8|9,10|11"

ggplot(loans, 
       aes(y = interest_rate, x = annual_income, 
           color = bankruptcy)) +
  geom_point(alpha = 0.1) + 
  geom_smooth(method = "lm", linewidth = 2, se = FALSE) + 
  scale_x_log10(labels = scales::label_dollar()) +
  scale_y_continuous(labels = scales::label_percent(scale = 1)) +
  scale_color_OkabeIto() +
  labs(x = "Annual Income", y = "Interest Rate", 
       color = "Previous\nBankruptcy") +
  theme_minimal(base_size = 18)
```

## `plot()` ile görselleştirme

```{r}
#| label: base-r-viz-extend
#| fig-show: hide

# From the OkabeIto palette
cols = c(No = "#e6a003", Yes = "#57b4e9")

plot(
  loans$annual_income,
  loans$interest_rate,
  pch = 16,
  col = adjustcolor(cols[loans$bankruptcy], alpha.f = 0.1),
  log = "x",
  xlab = "Annual Income ($)",
  ylab = "Interest Rate (%)",
  xaxp = c(1000, 10000000, 1)
)

lm_b_no = lm(
  interest_rate ~ log10(annual_income), 
  data = loans[loans$bankruptcy == "No",]
)
lm_b_yes = lm(
  interest_rate ~ log10(annual_income), 
  data = loans[loans$bankruptcy == "Yes",]
)

abline(lm_b_no, col = cols["No"], lwd = 3)
abline(lm_b_yes, col = cols["Yes"], lwd = 3)

legend(
  "topright", 
  legend = c("Yes", "No"), 
  title = "Previous\nBankruptcy", 
  col = cols[c("Yes", "No")], 
  pch = 16, lwd = 1
)
```

## `plot()` ile görselleştirme

```{r}
#| ref.label: base-r-viz-extend
#| echo: false
```

## modelleme

**tidymodels** ile modelleme ve istatistiki çıkarım:

-   çok çeşitli paketlerde bulunan modelleme işlevlerine yönelik birleşik bir arayüz

-   veri çerçevesi içeri / veri çerçevesi dışarı paradigmasına bağlı kalmak

-   metodoloji için korkuluklar

# son düşünceler

## tidyverse' in pedagojik güçlü yönleri {.smaller}

::: incremental
-   **tutarlılık:** öğrencilerin fonksiyon argümanları hakkındaki bilgileri uzun süreli hafızalarına taşımalarına izin verir
-   **bağdaşabilirlik:** base R koduyla (ya da başka paketlerin kodlarıyla) bir arada kullanmamak mümkün değil!
-   **ölçeklenebilirlik:** bir görselleştirmeye veya yeni bir özet istatistiğe yeni bir değişken eklemek, çok sayıda işlev, arabirim ve veri yapısının tanıtılmasını gerektirmez.
-   **kullanıcı merkezli tasarım:** kullanıcı deneyimi (ve öğrenimi) düşünülerek tasarlanmış ve devamlı olarak geliştirilen arayüzler
-   **okunabilirlik:** okunabilir kod üretmek için tasarlanmış arayüzler
-   **komünite + dokümentasyon:** teşvik edici ve kapsayıcı komünite + kullanıcı dostu dokümentasyon
-   **paylaşılan sözdizimi:** **dplyr** fiilleriyle SQL'i ücretsiz edinin!
:::

## müfredat oluşturmak

-   `library(tidyverse)` ile başlayin

-   paket paket değil, öğrenme hedeflerinin sırasına gore öğretin

## data science in a box

::: {align="center"}
[**datasciencebox.org**](https://datasciencebox.org)
:::

![](images/dsbox.png){fig-alt="Data Science in a Box logo"}

## tidyverse'i takip etmek

-   blog gönderileri, güncellemeleri, bunların arkasındaki mantık ve işe yarayan örneklerle birlikte vurgular

-   [lifecycle stages](https://lifecycle.r-lib.org/articles/stages.html) (yaşam döngüsü aşamaları) ve rozetler

    ![](images/lifecycle.png){alt="Lifecycle stages: experimental to stable to either deprecated or superseded"}

## koda {.smaller}

::: columns
::: {.column width="60%"}
> Her birimiz R'i tidyverse oncesinde öğrendik ve senelerce tidyverse'siz R ogrettik.
> Daha sonra araştırmamızda ve öğretimimizde tidyverse'i kullanmaya karar verdik.
> Bu makale, tidyverse seçimimizi destekleyen nedenlerin yanı sıra, tidyverse ile istatistik öğretiminin faydalarının ve zorluklarının bir sentezidir.
:::

::: {.column width="40%"}
![](images/paper.png)
:::
:::

::: aside
Çetinkaya-Rundel, M., Hardin, J., Baumer, B. S., McNamara, A., Horton, N. J., & Rundel, C.
(2021).
An educator's perspective of the tidyverse.
arXiv preprint arXiv:2108.03510.
[arxiv.org/abs/2108.03510](https://arxiv.org/abs/2108.03510)
:::

# teşekkürler!

::: {align="center"}
[**bit.ly/tidyperspective-whyR-tr**](https://bit.ly/whyR-tr)
:::

<br><br><br>

🌐 [mine-cr.com](https://mine-cr.com/)

🐦 [\@minebocek](https://twitter.com/minebocek)

💻 [mine-cetinkaya-rundel](http://github.com/mine-cetinkaya-rundel)
