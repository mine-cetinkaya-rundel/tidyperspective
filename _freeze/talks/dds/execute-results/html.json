{
  "hash": "b06f36b2e78cfb0c5defab5ee9441739",
  "result": {
    "markdown": "---\npagetitle: \"Welcoming new learners to data science with the tidyverse\"\nauthor: \"mine çetinkaya-rundel\"\nsubtitle: \"[bit.ly/tidyperspective-dds](https://bit.ly/tidyperspective-dds)\"\nformat:\n  revealjs:\n    theme: theme-dds.scss\n    transition: fade\n    background-transition: fade\n    height: 900\n    width: 1600\n    fontcolor: \"#262d36\"\n    highlight-style: ayu-mirage\n    multiplex: true\n    embed-resources: true\ncode-link: true\nexecute:\n  echo: true\n  freeze: auto\n---\n\n\n#  {#title-slide data-menu-title=\"Welcoming new learners to data science with the tidyverse\" background-image=\"images/cover-dds.png\" aria-label=\"Stack of legos, in rainbow colors, making up a staircase.\"}\n\n[welcoming learners]{.custom-title-1}\n\n[to data science]{.custom-title-2}\n\n[with the tidyverse]{.custom-title-3}\n\n[mine çetinkaya-rundel<br>duke university + posit]{.custom-author}\n\n[[bit.ly/tidyperspective-dds](https://bit.ly/tidyperspective-dds)]{.custom-url}\n\n[[\\@minebocek](https://twitter.com/minebocek)]{.custom-twitter}\n\n# introduction\n\n\n::: {.cell}\n\n:::\n\n\n## setting the scene\n\n::: {style=\"text-align: center;\"}\n::: columns\n::: {.column width=\"50%\"}\n::: {.fragment fragment-index=\"1\"}\n### about [me]{style=\"color: #026928;\"}\n:::\n\n<br>\n\n::: {.fragment fragment-index=\"2\"}\n![](images/icons8-female-teacher-64.png){fig-alt=\"Female teacher icon\"}\n\n**Focus:**\n\nData science for new learners\n:::\n\n<br>\n\n::: {.fragment fragment-index=\"3\"}\n![](images/icons8-cake-64.png){fig-alt=\"Cake icon\"}\n\n**Philosophy:**\n\nLet them eat cake (first)!\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: {.fragment fragment-index=\"4\"}\n### about [data science education]{style=\"color: #026928;\"}\n:::\n\n<br>\n\n::: {.fragment fragment-index=\"5\"}\n![](images/icons8-code-64.png){fig-alt=\"Code icon\"}\n\n**Assumption 1:**\n\nTeach authentic tools\n:::\n\n<br>\n\n::: {.fragment fragment-index=\"6\"}\n![](images/icons8-code-R-64.png){fig-alt=\"Code icon with R logo\"}\n\n**Assumption 2:**\n\nTeach R as the authentic tool\n:::\n:::\n:::\n:::\n\n## takeaway\n\n<br><br>\n\n> The tidyverse provides an effective and efficient pathway for undergraduate students at all levels and majors to gain computational skills and thinking needed throughout the data science cycle.\n\n::: aside\nÇetinkaya-Rundel, M., Hardin, J., Baumer, B., McNamara, A., Horton, N., & Rundel, C.\n(2022).\nAn educator's perspective of the tidyverse.\nTechnology Innovations in Statistics Education, 14(1).\n[dx.doi.org/10.5070/T514154352](http://dx.doi.org/10.5070/T514154352).\n:::\n\n## and that pathway starts with...\n\n<br>\n\n::: fragment\n::: {style=\"text-align: center; font-size: 50px;\"}\nIntroduction to Data Science\n\n[sta199-f22-1.github.io](https://sta199-f22-1.github.io/)\n:::\n\n![](images/sta-199-topics.png){fig-align=\"center\" fig-alt=\"List of topics in STA 199: Hello world, Exploring data (visualize, wrangle, import), Data science ethics (misrepresentation, data privacy, algorithmic bias), Making rigorous conclusions (model, predict, infer), Looking further.\"}\n:::\n\n# principles of the tidyverse\n\n## tidyverse\n\n::: columns\n::: {.column width=\"80%\"}\nmeta R package that loads eight core packages when invoked and also bundles numerous other packages that share a design philosophy, common grammar, and data structures\n\n::: {.fragment fragment-index=\"1\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n    ── Attaching packages ────────────────────-─ tidyverse 1.3.2 ──\n    ✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n    ✔ tibble  3.1.8      ✔ dplyr   1.0.10\n    ✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n    ✔ readr   2.1.3      ✔ forcats 0.5.2\n:::\n:::\n\n::: {.column width=\"20%\"}\n![](images/tidyverse.png){fig-align=\"center\" fig-alt=\"Tidyverse hex icon\"}\n:::\n:::\n\n::: {.fragment fragment-index=\"2\"}\n![](images/data-science.png){fig-align=\"center\" width=\"700\" fig-alt=\"Data science cycle: import, tidy, transform, visualize, model, communicate. Packages readr and tibble are for import. Packages tidyr and purr for tidy and transform. Packages dplyr, stringr, forcats, and lubridate are for transform. Package ggplot2 is for visualize.\"}\n:::\n\n::: aside\nWickham et al., (2019).\nWelcome to the Tidyverse.\nJournal of Open Source Software, 4(43), 1686, [doi.org/10.21105/joss.01686](https://doi.org/10.21105/joss.01686).\n:::\n\n## examples: two \"simple\" tasks\n\n\n\n\n\n::: columns\n::: {.column width=\"48%\"}\n::: {.fragment fragment-index=\"1\"}\n### grouped summary statistics:\n\n::: goal\nBased on the applicants' home ownership status, compute the average loan amount and the number of applicants.\nDisplay the results in descending order of average loan amount.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Homeownership </th>\n   <th style=\"text-align:right;\"> Average loan amount </th>\n   <th style=\"text-align:right;\"> Number of applicants </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Mortgage </td>\n   <td style=\"text-align:right;\"> $18,132 </td>\n   <td style=\"text-align:right;\"> 4,778 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Own </td>\n   <td style=\"text-align:right;\"> $15,665 </td>\n   <td style=\"text-align:right;\"> 1,350 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Rent </td>\n   <td style=\"text-align:right;\"> $14,396 </td>\n   <td style=\"text-align:right;\"> 3,848 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n:::\n:::\n\n::: {.column width=\"4%\"}\n:::\n\n::: {.column width=\"48%\"}\n::: {.fragment fragment-index=\"2\"}\n### multivariable data visualizations:\n\n::: goal\nCreate side-by-side box plots that show the relationship between loan amount and application type based on homeownership.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=1152}\n:::\n:::\n\n:::\n:::\n:::\n\n# teaching with the tidyverse\n\n## task 1 - step 1\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, compute the average loan amount and the number of applicants.\nDisplay the results in descending order of average loan amount.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nloans\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9,976 × 3\n  loan_amount homeownership application_type\n        <int> <chr>         <fct>           \n1       28000 Mortgage      individual      \n2        5000 Rent          individual      \n3        2000 Rent          individual      \n4       21600 Rent          individual      \n5       23000 Rent          joint           \n6        5000 Own           individual      \n# … with 9,970 more rows\n```\n:::\n:::\n\n:::\n:::\n\n## task 1 - step 2\n\n::: columns\n::: {.column width=\"40%\"}\n[Based on the applicants' home ownership status]{style=\"font-weight:bold;background-color:#ccddeb;\"}, compute the average loan amount and the number of applicants.\nDisplay the results in descending order of average loan amount.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nloans |>\n  group_by(homeownership)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9,976 × 3\n# Groups:   homeownership [3]\n  loan_amount homeownership application_type\n        <int> <chr>         <fct>           \n1       28000 Mortgage      individual      \n2        5000 Rent          individual      \n3        2000 Rent          individual      \n4       21600 Rent          individual      \n5       23000 Rent          joint           \n6        5000 Own           individual      \n# … with 9,970 more rows\n```\n:::\n:::\n\n:::\n:::\n\n## task 1 - step 3\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, [compute the average loan amount]{style=\"font-weight:bold;background-color:#ccddeb;\"} and the number of applicants.\nDisplay the results in descending order of average loan amount.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-5\"}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    avg_loan_amount = mean(loan_amount)\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  homeownership avg_loan_amount\n  <chr>                   <dbl>\n1 Mortgage               18132.\n2 Own                    15665.\n3 Rent                   14396.\n```\n:::\n:::\n\n:::\n:::\n\n## task 1 - step 4\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, compute the average loan amount and [the number of applicants]{style=\"font-weight:bold;background-color:#ccddeb;\"}.\nDisplay the results in descending order of average loan amount.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    avg_loan_amount = mean(loan_amount),\n    n_applicants = n()\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  homeownership avg_loan_amount n_applicants\n  <chr>                   <dbl>        <int>\n1 Mortgage               18132.         4778\n2 Own                    15665.         1350\n3 Rent                   14396.         3848\n```\n:::\n:::\n\n:::\n:::\n\n## task 1 - step 5\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, compute the average loan amount and the number of applicants.\n[Display the results in descending order of average loan amount.]{style=\"font-weight:bold;background-color:#ccddeb;\"}\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    avg_loan_amount = mean(loan_amount),\n    n_applicants = n()\n    ) |>\n  arrange(desc(avg_loan_amount))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  homeownership avg_loan_amount n_applicants\n  <chr>                   <dbl>        <int>\n1 Mortgage               18132.         4778\n2 Own                    15665.         1350\n3 Rent                   14396.         3848\n```\n:::\n:::\n\n:::\n:::\n\n## task 1 with the tidyverse\n\n::: columns\n::: {.column width=\"60%\"}\n::: in-out\n**\\[input\\]** data frame\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    avg_loan_amount = mean(loan_amount),\n    n_applicants = n()\n    ) |>\n  arrange(desc(avg_loan_amount))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  homeownership avg_loan_amount n_applicants\n  <chr>                   <dbl>        <int>\n1 Mortgage               18132.         4778\n2 Own                    15665.         1350\n3 Rent                   14396.         3848\n```\n:::\n:::\n\n\n::: in-out\n**\\[output\\]** data frame\n:::\n:::\n\n::: {.column width=\"4%\"}\n:::\n\n::: {.column width=\"36%\"}\n::: incremental\n-   always start with a data frame and end with a data frame\n-   variables are always accessed from within data frames\n-   more verbose (than some other approaches), but also more expressive and extensible\n:::\n:::\n:::\n\n## task 1 with `aggregate()`\n\n::: columns\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|1-5|7-11|13|14-15\"}\nns <- aggregate(\n  loan_amount ~ homeownership, \n  data = loans, FUN = length\n  )\nnames(ns)[2] <- \"n_applicants\"\n\navgs <- aggregate(\n  loan_amount ~ homeownership, \n  data = loans, FUN = mean\n  )\nnames(avgs)[2] <- \"avg_loan_amount\"\n\nresult <- merge(ns, avgs)\nresult[order(result$avg_loan_amount, \n             decreasing = TRUE), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  homeownership n_applicants avg_loan_amount\n1      Mortgage         4778        18132.45\n2           Own         1350        15665.44\n3          Rent         3848        14396.44\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n:::\n:::\n\n## task 1 with `aggregate()`\n\n::: columns\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nns <- aggregate(\n  loan_amount ~ homeownership, \n  data = loans, FUN = length\n  )\nnames(ns)[2] <- \"n_applicants\"\n\navgs <- aggregate(\n  loan_amount ~ homeownership, \n  data = loans, FUN = mean\n  )\nnames(avgs)[2] <- \"avg_loan_amount\"\n\nresult <- merge(ns, avgs)\nresult[order(result$avg_loan_amount, \n             decreasing = TRUE), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  homeownership n_applicants avg_loan_amount\n1      Mortgage         4778        18132.45\n2           Own         1350        15665.44\n3          Rent         3848        14396.44\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"4%\"}\n:::\n\n::: {.column width=\"36%\"}\n**challenges:** need to introduce\n\n::: incremental\n-   formula syntax\n-   passing functions as arguments\n-   merging datasets\n-   square bracket notation for accessing rows\n:::\n:::\n:::\n\n## task 1 with `tapply()`\n\n::: columns\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nsort(\n  tapply(loans$loan_amount, \n         loans$homeownership, \n         mean),\n  decreasing = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMortgage      Own     Rent \n18132.45 15665.44 14396.44 \n```\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n:::\n:::\n\n## task 1 with `tapply()`\n\n::: columns\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nsort(\n  tapply(loans$loan_amount, \n         loans$homeownership, \n         mean),\n  decreasing = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMortgage      Own     Rent \n18132.45 15665.44 14396.44 \n```\n:::\n:::\n\n:::\n\n::: {.column width=\"4%\"}\n:::\n\n::: {.column width=\"36%\"}\n**challenges:** need to introduce\n\n::: incremental\n-   passing functions as arguments\n-   distinguishing between the various `apply()` functions\n-   ending up with a new data structure (`array`)\n-   reading nested functions\n:::\n:::\n:::\n\n## task 2 - step 1\n\n::: columns\n::: {.column width=\"40%\"}\n[Create side-by-side box plots that shows the relationship between annual income and application type]{style=\"font-weight:bold;background-color:#ccddeb;\"}, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nggplot(loans)\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## task 2 - step 2\n\n::: columns\n::: {.column width=\"40%\"}\n[Create side-by-side box plots that shows the relationship between annual income and application type]{style=\"font-weight:bold;background-color:#ccddeb;\"}, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(loans, \n       aes(x = application_type))\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## task 2 - step 3\n\n::: columns\n::: {.column width=\"40%\"}\n[Create side-by-side box plots that shows the relationship between annual income and application type]{style=\"font-weight:bold;background-color:#ccddeb;\"}, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(loans, \n       aes(x = application_type,\n           y = loan_amount))\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## task 2 - step 4\n\n::: columns\n::: {.column width=\"40%\"}\n[Create side-by-side box plots that shows the relationship between annual income and application type]{style=\"font-weight:bold;background-color:#ccddeb;\"}, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(loans, \n       aes(x = application_type,\n           y = loan_amount)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## task 2 - step 5\n\n::: columns\n::: {.column width=\"40%\"}\nCreate side-by-side box plots that shows the relationship between annual income and application type, [faceted by homeownership.]{style=\"font-weight:bold;background-color:#ccddeb;\"}\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(loans, \n       aes(x = application_type,\n           y = loan_amount)) +\n  geom_boxplot() +\n  facet_wrap(~ homeownership)\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## task 2 with `boxplot()`\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"1|3-5|7|9-14\"}\nlevels <- sort(unique(loans$homeownership))\n\nloans1 <- loans[loans$homeownership == levels[1],]\nloans2 <- loans[loans$homeownership == levels[2],]\nloans3 <- loans[loans$homeownership == levels[3],]\n\npar(mfrow = c(1, 3))\n\nboxplot(loan_amount ~ application_type, \n        data = loans1, main = levels[1])\nboxplot(loan_amount ~ application_type, \n        data = loans2, main = levels[2])\nboxplot(loan_amount ~ application_type, \n        data = loans3, main = levels[3])\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-21-1.png){width=1152}\n:::\n:::\n\n\n## we could keep going, but... {.center}\n\n## tools designed for specific tasks vs. general tools\n\n![](images/sets-vs-pieces.png){fig-alt=\"On one side Lego city sets, on the other size a lego base plate and loose classic Lego pieces.\"}\n\n##  {data-menu-title=\"beyond the tidyverse\" background-image=\"images/tidyverse-beyond.png\" aria-label=\"All of the core packages in tidyverse and tidymodels as well as many of the non-core packages.\"}\n\n# final thoughts\n\n## pedagogical strengths of the tidyverse\n\n| Concept              | Description                                                                                                |\n|----------------------|------------------------------------------------------------------------------------------------------------|\n| Consistency          | Syntax, function interfaces, argument names, and orders follow patterns                                    |\n| Mixability           | Ability to use base R and other functions within the tidyverse                                             |\n| Scalability          | Unified approach to data wrangling and visualization works for datasets of a wide range of types and sizes |\n| User-centered design | Function interfaces designed and improved with users in mind                                               |\n| Readability          | Interfaces that are designed to produce readable code                                                      |\n| Community            | Large, active, welcoming community of users and resources                                                  |\n| Transfarability      | Data manipulation verbs inherit from SQL's query syntax                                                    |\n\n## keeping up with the tidyverse\n\n-   Blog posts highlight updates, along with the reasoning behind them and worked examples\n\n-   [Lifecycle stages](https://lifecycle.r-lib.org/articles/stages.html) and badges\n\n    ![](images/lifecycle.png){fig-alt=\"Lifecycle stages of tidyverse functions and packages: experimental, stable, deprecated, superseded.\"}\n\n## building a curriculum\n\n-   Start with `library(tidyverse)`\n\n-   Teach by learning goals, not packages\n\n## the curriculum we've built \\@ duke statsci\n\n::: incremental\n-   **STA 199: Introduction to Data Science**\n\n-   courses:\n\n    -   STA 198: Introduction to Global Health Data Science\n    -   STA 210: Regression Analysis\n    -   STA 323: Statistical Computing\n    -   STA 440: Case Studies\n\n-   programs:\n\n    -   Inter-departmental major in Data Science (with CS)\n    -   Data Science concentration for the StatSci major\n\n-   and more...\n:::\n\n## learn / teach the tidyverse\n\n::: columns\n::: {.column width=\"50%\"}\n::: {style=\"text-align: center; font-size: 50px;\"}\n::: {.column width=\"50%\"}\n**learn** the tidyverse\n\n[tidyverse.org](https://tidyverse.org)\n:::\n:::\n\n![](images/tidyverse.png){fig-align=\"center\" width=\"400\" fig-alt=\"Tidyverse hex logo\"}\n:::\n\n::: {.column width=\"50%\"}\n::: {style=\"text-align: center; font-size: 50px;\"}\n::: {.column width=\"50%\"}\n**teach** the tidyverse\n:::\n\n[datasciencebox.org](https://datasciencebox.org)\n:::\n\n![](images/dsbox-rectangle.png){fig-align=\"center\" width=\"400\" fig-alt=\"Data science in a box hex logo\"}\n:::\n:::\n\n## further reading\n\n::: columns\n::: {.column width=\"60%\"}\n`+` collaborators\n\n-   Johanna Hardin, Pomona College\n-   Benjamin S. Baumer, Smith College\n-   Amelia McNamara, University of St Thomas\n-   Nicholas J. Horton, Amherst College\n-   Colin W. Rundel, Duke University\n:::\n\n::: {.column width=\"40%\"}\n[![](images/paper-tise.png){fig-alt=\"Screenshot of the paper titled \\\"An educator's perspective of the tidyverse\\\" from the journal (TISE) website. Shows the title of the paper, the names and affiliations of authors, and part of the abstract.\" width=\"500\"}](https://doi.org/10.5070/T514154352)\n:::\n:::\n\n::: aside\nÇetinkaya-Rundel, M., Hardin, J., Baumer, B. S., McNamara, A., Horton, N. J., & Rundel, C.\n(2022).\nAn educator's perspective of the tidyverse.\nTechnology Innovations in Statistics Education, 14(1).\n[doi.org/10.5070/T514154352](https://doi.org/10.5070/T514154352).\n:::\n\n# thank you! {background-image=\"images/tidyverse-celestial.png\" aria-label=\"A galaxy of tidyverse-related hex stickers.\" background-opacity=\"0.5\"}\n\n[bit.ly/tidyperspective-dds](https://bit.ly/tidyperspective-dds)\n",
    "supporting": [
      "dds_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}