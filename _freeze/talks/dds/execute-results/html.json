{
  "hash": "f891cd94c8338b9159f10ba50783694a",
  "result": {
    "markdown": "---\npagetitle: \"Welcoming new learners to data science with the tidyverse\"\nauthor: \"mine çetinkaya-rundel\"\ndate: \"[bit.ly/tidyperspective-dds](https://bit.ly/tidyperspective-dds)\"\nformat:\n  revealjs:\n    theme: slides-dds.scss\n    transition: fade\n    background-transition: fade\n    height: 900\n    width: 1600\n    fontcolor: \"#262d36\"\n    highlight-style: ayu-mirage\ncode-link: true\nexecute:\n  echo: true\n  freeze: auto\n---\n\n\n#  {#hello-quarto-title data-menu-title=\"Welcoming new learners to data science with the tidyverse\" background-image=\"images-dds/cover.png\" aria-label=\"Stack of legos, in rainbow colors, making up a staircase.\"}\n\n[welcoming learners]{.custom-title-1}\n\n[to data science]{.custom-title-2}\n\n[with the tidyverse]{.custom-title-3}\n\n[mine çetinkaya-rundel<br>duke university + posit]{.custom-author}\n\n[[bit.ly/tidyperspective-dds](https://bit.ly/tidyperspective-dds/)]{.custom-url}\n\n[[\\@minebocek](https://twitter.com/minebocek)]{.custom-twitter}\n\n# introduction\n\n\n::: {.cell}\n\n:::\n\n\n## setting the scene\n\n::: {style=\"text-align: center;\"}\n::: columns\n::: {.column width=\"50%\"}\n::: {.fragment fragment-index=\"1\"}\n### about [me]{style=\"color: #026928;\"}\n:::\n\n<br>\n\n::: {.fragment fragment-index=\"2\"}\n![](images-dds/icons8-female-teacher-64.png)\n\n**Focus:**\n\nData science for new learners\n:::\n\n<br>\n\n::: {.fragment fragment-index=\"3\"}\n![](images-dds/icons8-cake-64.png)\n\n**Philosophy:**\n\nLet them eat cake (first)!\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: {.fragment fragment-index=\"4\"}\n### about [data science education]{style=\"color: #026928;\"}\n:::\n\n<br>\n\n::: {.fragment fragment-index=\"5\"}\n![](images/icons8-code-64.png)\n\n**Assumption 1:**\n\nTeach authentic tools\n:::\n\n<br>\n\n::: {.fragment fragment-index=\"6\"}\n![](images/icons8-code-R-64.png)\n\n**Assumption 2:**\n\nTeach R as the authentic tool\n:::\n:::\n:::\n:::\n\n## takeaway\n\n<br><br>\n\n> The tidyverse provides an effective and efficient pathway for undergraduate students at all levels and majors to gain computational skills and thinking needed throughout the data science cycle.\n\n::: aside\nÇetinkaya-Rundel, M., Hardin, J., Baumer, B., McNamara, A., Horton, N., & Rundel, C.\n(2022).\nAn educator's perspective of the tidyverse.\nTechnology Innovations in Statistics Education, 14(1).\n[dx.doi.org/10.5070/T514154352](http://dx.doi.org/10.5070/T514154352).\n:::\n\n## and that pathway starts with...\n\n<br>\n\n::: fragment\n::: {style=\"text-align: center; font-size: 50px;\"}\nSTA 199: Introduction to Data Science\n\n[sta199-f22-1.github.io](https://sta199-f22-1.github.io/)\n:::\n\n![](images/sta-199-topics.png){fig-align=\"center\"}\n:::\n\n# principles of the tidyverse\n\n## tidyverse\n\n::: columns\n::: {.column width=\"80%\"}\n-   meta R package that loads eight core packages when invoked and also bundles numerous other packages upon installation\n-   tidyverse packages share a design philosophy, common grammar, and data structures\n:::\n\n::: {.column width=\"20%\"}\n![](images/tidyverse.png){fig-align=\"center\"}\n:::\n:::\n\n![](images/data-science.png){fig-align=\"center\" width=\"1000\"}\n\n## setup\n\n**Data:** Thousands of loans made through the Lending Club, a peer-to-peer lending platform available in the **openintro** package, with a few modifications.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(openintro)\n\nloans <- loans_full_schema |>\n  mutate(\n    homeownership = str_to_title(homeownership), \n    bankruptcy = if_else(public_record_bankrupt >= 1, \"Yes\", \"No\")\n  ) |>\n  filter(annual_income >= 10) |>\n  select(\n    loan_amount, homeownership, bankruptcy,\n    application_type, annual_income, interest_rate\n  )\n```\n:::\n\n\n## start with a data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9,976 × 6\n  loan_amount homeownership bankruptcy application_type annual_income interest…¹\n        <int> <chr>         <chr>      <fct>                    <dbl>      <dbl>\n1       28000 Mortgage      No         individual               90000      14.1 \n2        5000 Rent          Yes        individual               40000      12.6 \n3        2000 Rent          No         individual               40000      17.1 \n4       21600 Rent          No         individual               30000       6.72\n5       23000 Rent          No         joint                    35000      14.1 \n6        5000 Own           No         individual               34000       6.72\n# … with 9,970 more rows, and abbreviated variable name ¹​interest_rate\n```\n:::\n:::\n\n\n## tidy data\n\n1.  Each variable forms a column\n2.  Each observation forms a row\n3.  Each type of observational unit forms a table\n\n::: aside\nWickham, H.\n. (2014).\nTidy Data.\n*Journal of Statistical Software*, *59*(10), 1--23.\n[doi.org/10.18637/jss.v059.i10](https://doi.org/10.18637/jss.v059.i10).\n:::\n\n## task: calculate a summary statistic\n\n::: goal\nCalculate the mean loan amount.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9,976 × 6\n  loan_amount homeownership bankruptcy application_type annual_income interest…¹\n        <int> <chr>         <chr>      <fct>                    <dbl>      <dbl>\n1       28000 Mortgage      No         individual               90000      14.1 \n2        5000 Rent          Yes        individual               40000      12.6 \n3        2000 Rent          No         individual               40000      17.1 \n4       21600 Rent          No         individual               30000       6.72\n5       23000 Rent          No         joint                    35000      14.1 \n6        5000 Own           No         individual               34000       6.72\n# … with 9,970 more rows, and abbreviated variable name ¹​interest_rate\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(loan_amount)\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\nError in mean(loan_amount): object 'loan_amount' not found\n```\n:::\n:::\n\n\n## accessing a variable\n\n**Approach 1:** With `attach()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattach(loans)\nmean(loan_amount)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16357.53\n```\n:::\n:::\n\n\n. . .\n\n<br>\n\n*Not recommended.* What if you had another data frame you're working with concurrently called `car_loans` that also had a variable called `loan_amount` in it?\n\n\n::: {.cell}\n\n:::\n\n\n## accessing a variable\n\n**Approach 2:** Using `$`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(loans$loan_amount)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16357.53\n```\n:::\n:::\n\n\n. . .\n\n<br>\n\n**Approach 3:** Using `with()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwith(loans, mean(loan_amount))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16357.53\n```\n:::\n:::\n\n\n## accessing a variable\n\n**Approach 4:** The tidyverse approach:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans |>\n  summarise(mean_loan_amount = mean(loan_amount))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  mean_loan_amount\n             <dbl>\n1           16358.\n```\n:::\n:::\n\n\n. . .\n\n-   More verbose\n-   But also more expressive and extensible\n\n## the tidyverse approach\n\n::: incremental\n-   tidyverse functions take a `data` argument that allows them to localize computations inside the specified data frame\n\n-   does not muddy the concept of what is in the current environment: variables always accessed from within in a data frame without the use of an additional function (like `with()`) or quotation marks, never as a vector\n:::\n\n# teaching with the tidyverse\n\n## task: grouped summary\n\n::: goal\nBased on the applicants' home ownership status, compute the average loan amount and the number of applicants.\nDisplay the results in descending order of average loan amount.\n:::\n\n<br>\n\n::: small\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Homeownership </th>\n   <th style=\"text-align:right;\"> Average loan amount </th>\n   <th style=\"text-align:right;\"> Number of applicants </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Mortgage </td>\n   <td style=\"text-align:right;\"> $18,132 </td>\n   <td style=\"text-align:right;\"> 4,778 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Own </td>\n   <td style=\"text-align:right;\"> $15,665 </td>\n   <td style=\"text-align:right;\"> 1,350 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Rent </td>\n   <td style=\"text-align:right;\"> $14,396 </td>\n   <td style=\"text-align:right;\"> 3,848 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n:::\n\n## break it down I\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, compute the average loan amount and the number of applicants.\nDisplay the results in descending order of average loan amount.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nloans\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9,976 × 6\n  loan_amount homeownership bankruptcy application_type annual_income interest…¹\n        <int> <chr>         <chr>      <fct>                    <dbl>      <dbl>\n1       28000 Mortgage      No         individual               90000      14.1 \n2        5000 Rent          Yes        individual               40000      12.6 \n3        2000 Rent          No         individual               40000      17.1 \n4       21600 Rent          No         individual               30000       6.72\n5       23000 Rent          No         joint                    35000      14.1 \n6        5000 Own           No         individual               34000       6.72\n# … with 9,970 more rows, and abbreviated variable name ¹​interest_rate\n```\n:::\n:::\n\n:::\n:::\n\n## break it down II\n\n::: columns\n::: {.column width=\"20%\"}\n[Based on the applicants' home ownership status]{style=\"font-weight:bold;background-color:#ccddeb;\"}, compute the average loan amount and the number of applicants.\nDisplay the results in descending order of average loan amount.\n:::\n\n::: {.column width=\"80%\"}\n::: {.fragment fragment-index=\"2\"}\n::: in-out\n**\\[input\\]** data frame\n:::\n:::\n\n::: {.fragment fragment-index=\"3\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nloans |>\n  group_by(homeownership)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9,976 × 6\n# Groups:   homeownership [3]\n  loan_amount homeownership bankruptcy application_type annual_income interest…¹\n        <int> <chr>         <chr>      <fct>                    <dbl>      <dbl>\n1       28000 Mortgage      No         individual               90000      14.1 \n2        5000 Rent          Yes        individual               40000      12.6 \n3        2000 Rent          No         individual               40000      17.1 \n4       21600 Rent          No         individual               30000       6.72\n5       23000 Rent          No         joint                    35000      14.1 \n6        5000 Own           No         individual               34000       6.72\n# … with 9,970 more rows, and abbreviated variable name ¹​interest_rate\n```\n:::\n:::\n\n:::\n\n::: {.fragment fragment-index=\"4\"}\n::: {.in-out style=\"text-align: right;\"}\ndata frame **\\[output\\]**\n:::\n:::\n:::\n:::\n\n## break it down III\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, [compute the average loan amount]{style=\"font-weight:bold;background-color:#ccddeb;\"} and the number of applicants.\nDisplay the results in descending order of average loan amount.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-5\"}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    avg_loan_amount = mean(loan_amount)\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  homeownership avg_loan_amount\n  <chr>                   <dbl>\n1 Mortgage               18132.\n2 Own                    15665.\n3 Rent                   14396.\n```\n:::\n:::\n\n:::\n:::\n\n## break it down IV\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, compute the average loan amount and [the number of applicants]{style=\"font-weight:bold;background-color:#ccddeb;\"}.\nDisplay the results in descending order of average loan amount.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    avg_loan_amount = mean(loan_amount),\n    n_applicants = n()\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  homeownership avg_loan_amount n_applicants\n  <chr>                   <dbl>        <int>\n1 Mortgage               18132.         4778\n2 Own                    15665.         1350\n3 Rent                   14396.         3848\n```\n:::\n:::\n\n:::\n:::\n\n## break it down V\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, compute the average loan amount and the number of applicants.\n[Display the results in descending order of average loan amount.]{style=\"font-weight:bold;background-color:#ccddeb;\"}\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    avg_loan_amount = mean(loan_amount),\n    n_applicants = n()\n    ) |>\n  arrange(desc(avg_loan_amount))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  homeownership avg_loan_amount n_applicants\n  <chr>                   <dbl>        <int>\n1 Mortgage               18132.         4778\n2 Own                    15665.         1350\n3 Rent                   14396.         3848\n```\n:::\n:::\n\n:::\n:::\n\n## putting it back together\n\n::: in-out\n**\\[input\\]** data frame\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    avg_loan_amount = mean(loan_amount),\n    n_applicants = n()\n    ) |>\n  arrange(desc(avg_loan_amount))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  homeownership avg_loan_amount n_applicants\n  <chr>                   <dbl>        <int>\n1 Mortgage               18132.         4778\n2 Own                    15665.         1350\n3 Rent                   14396.         3848\n```\n:::\n:::\n\n\n::: in-out\n**\\[output\\]** data frame\n:::\n\n## grouped summary with `aggregate()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres1 <- aggregate(loan_amount ~ homeownership, \n                  data = loans, FUN = length)\nres1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  homeownership loan_amount\n1      Mortgage        4778\n2           Own        1350\n3          Rent        3848\n```\n:::\n\n```{.r .cell-code}\nnames(res1)[2] <- \"n_applicants\"\nres1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  homeownership n_applicants\n1      Mortgage         4778\n2           Own         1350\n3          Rent         3848\n```\n:::\n:::\n\n\n## grouped summary with `aggregate()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres2 <- aggregate(loan_amount ~ homeownership, \n                  data = loans, FUN = mean)\nnames(res2)[2] <- \"avg_loan_amount\"\n\nres2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  homeownership avg_loan_amount\n1      Mortgage        18132.45\n2           Own        15665.44\n3          Rent        14396.44\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres <- merge(res1, res2)\nres[order(res$avg_loan_amount, decreasing = TRUE), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  homeownership n_applicants avg_loan_amount\n1      Mortgage         4778        18132.45\n2           Own         1350        15665.44\n3          Rent         3848        14396.44\n```\n:::\n:::\n\n\n## grouped summary with `aggregate()`\n\n::: medium\n\n::: {.cell}\n\n```{.r .cell-code}\nres1 <- aggregate(loan_amount ~ homeownership, data = loans, FUN = length)\nnames(res1)[2] <- \"n_applicants\"\n\nres2 <- aggregate(loan_amount ~ homeownership, data = loans, FUN = mean)\nnames(res2)[2] <- \"avg_loan_amount\"\n\nres <- merge(res1, res2)\n\nres[order(res$avg_loan_amount, decreasing = TRUE), ]\n```\n:::\n\n:::\n\n. . .\n\n-   **Good:** Inputs and outputs are data frames\n-   **Not so good:** Need to introduce\n    -   formula syntax\n\n    -   passing functions as arguments\n\n    -   merging datasets\n\n    -   square bracket notation for accessing rows\n\n## grouped summary with `tapply()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsort(\n  tapply(loans$loan_amount, loans$homeownership, mean),\n  decreasing = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMortgage      Own     Rent \n18132.45 15665.44 14396.44 \n```\n:::\n:::\n\n\n. . .\n\n<br>\n\n**Not so good:**\n\n-   passing functions as arguments\n-   distinguishing between the various `apply()` functions\n-   ending up with a new data structure (`array`)\n-   reading nested functions\n\n## task: data visualization\n\n::: goal\nCreate side-by-side box plots that shows the relationship between loan amount and application type, faceted by homeownership.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-24-1.png){fig-align='center' width=1152}\n:::\n:::\n\n\n## break it down I\n\n::: columns\n::: {.column width=\"40%\"}\n[Create side-by-side box plots that shows the relationship between annual income and application type]{style=\"font-weight:bold;background-color:#ccddeb;\"}, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nggplot(loans)\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## break it down II\n\n::: columns\n::: {.column width=\"40%\"}\n[Create side-by-side box plots that shows the relationship between annual income and application type]{style=\"font-weight:bold;background-color:#ccddeb;\"}, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(loans, \n       aes(x = application_type))\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## break it down III\n\n::: columns\n::: {.column width=\"40%\"}\n[Create side-by-side box plots that shows the relationship between annual income and application type]{style=\"font-weight:bold;background-color:#ccddeb;\"}, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(loans, \n       aes(x = application_type,\n           y = loan_amount))\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## break it down IV\n\n::: columns\n::: {.column width=\"40%\"}\n[Create side-by-side box plots that shows the relationship between annual income and application type]{style=\"font-weight:bold;background-color:#ccddeb;\"}, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(loans, \n       aes(x = application_type,\n           y = loan_amount)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-28-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## break it down IV\n\n::: columns\n::: {.column width=\"40%\"}\nCreate side-by-side box plots that shows the relationship between annual income and application type, [faceted by homeownership.]{style=\"font-weight:bold;background-color:#ccddeb;\"}\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(loans, \n       aes(x = application_type,\n           y = loan_amount)) +\n  geom_boxplot() +\n  facet_wrap(~ homeownership)\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-29-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## plotting with `ggplot()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, \n       aes(x = application_type, y = loan_amount)) +\n  geom_boxplot() +\n  facet_wrap(~ homeownership)\n```\n:::\n\n\n. . .\n\n-   Each layer produces a valid plot\n-   Faceting by a third variable takes only one new function\n\n## plotting with `boxplot()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels <- sort(unique(loans$homeownership))\nlevels\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Mortgage\" \"Own\"      \"Rent\"    \n```\n:::\n\n```{.r .cell-code}\nloans1 <- loans[loans$homeownership == levels[1],]\nloans2 <- loans[loans$homeownership == levels[2],]\nloans3 <- loans[loans$homeownership == levels[3],]\n```\n:::\n\n\n## plotting with `boxplot()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(1, 3))\n\nboxplot(loan_amount ~ application_type, \n        data = loans1, main = levels[1])\nboxplot(loan_amount ~ application_type, \n        data = loans2, main = levels[2])\nboxplot(loan_amount ~ application_type, \n        data = loans3, main = levels[3])\n```\n\n::: {.cell-output-display}\n![](dds_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n## we could keep going, but... {.center}\n\n::: fragment\nlet's zoom out a bit\n:::\n\n##  {data-menu-title=\"beyond the tidyverse\" background-image=\"images-dds/tidyverse-beyond.png\" aria-label=\"All of the core packages in tidyverse and tidymodels as well as many of the non-core packages.\"}\n\n## tools designed for specific tasks vs. general tools\n\n::: columns\n::: {.fragment fragment-index=\"1\"}\n::: {.column width=\"23%\"}\n![](images-dds/city-1.png) ![](images-dds/city-2.png)\n:::\n:::\n\n::: {.fragment fragment-index=\"2\"}\n::: {.column width=\"23%\"}\n![](images-dds/city-3.png) ![](images-dds/city-4.png)\n:::\n:::\n\n::: {.fragment fragment-index=\"3\"}\n::: {.column width=\"23%\"}\n![](images-dds/city-5.png) ![](images-dds/city-6.png)\n:::\n:::\n\n::: {.fragment fragment-index=\"4\"}\n::: {.column width=\"31%\"}\n![](images-dds/base-2.png) ![](images-dds/base-1.png)\n:::\n:::\n:::\n\n## pedagogical strengths of the tidyverse\n\n| Concept              | Description                                                                                                |\n|---------------------------|---------------------------------------------|\n| Consistency          | Syntax, function interfaces, argument names, and orders follow patterns                                    |\n| Mixability           | Ability to use base R and other functions within the tidyverse                                             |\n| Scalability          | Unified approach to data wrangling and visualization works for datasets of a wide range of types and sizes |\n| User-centered design | Function interfaces designed and improved with users in mind                                               |\n| Readability          | Interfaces that are designed to produce readable code                                                      |\n| Community            | Large, active, welcoming community of users and resources                                                  |\n| Transfarability      | Data manipulation verbs inherit from SQL's query syntax                                                    |\n\n# final thoughts\n\n## keeping up with the tidyverse\n\n-   Blog posts highlight updates, along with the reasoning behind them and worked examples\n\n-   [Lifecycle stages](https://lifecycle.r-lib.org/articles/stages.html) and badges\n\n    ![](images/lifecycle.png)\n\n## building a curriculum\n\n-   Start with `library(tidyverse)`\n\n-   Teach by learning goals, not packages\n\n## the curriculum we've built \\@ duke statsci\n\n::: {style=\"text-align: center; font-size: 50px;\"}\nSTA 199: Introduction to Data Science\n\n[sta199-f22-1.github.io](https://sta199-f22-1.github.io/)\n:::\n\n![](images/sta-199-topics.png){fig-align=\"center\" width=\"600\"}\n\n## downstream effects \\@ duke statsci\n\n-   courses:\n    -   STA 198: Introduction to Global Health Data Science\n\n    -   STA 210: Regression Analysis\n\n    -   STA 323: Statistical Computing\n\n    -   STA 440: Case Studies\n-   programs:\n    -   Inter-departmental major in Data Science (with CS)\n\n    -   Data Science concentration for the StatSci major\n-   and more...\n\n## \\_\\_\\_ the tidyverse\n\n::: columns\n::: {.column width=\"50%\"}\n::: {style=\"text-align: center; font-size: 50px;\"}\n::: {.column width=\"50%\"}\n**learn** the tidyverse\n\n[tidyverse.org](https://tidyverse.org)\n:::\n:::\n\n![](images/tidyverse.png){fig-align=\"center\" width=\"400\"}\n:::\n\n::: {.column width=\"50%\"}\n::: {style=\"text-align: center; font-size: 50px;\"}\n::: {.column width=\"50%\"}\n**teach** the tidyverse\n:::\n\n[datasciencebox.org](https://datasciencebox.org)\n:::\n\n![](images/dsbox-rectangle.png){fig-align=\"center\" width=\"400\"}\n:::\n:::\n\n## acknowledgement\n\n-   Johanna Hardin, Pomona College\n-   Benjamin S. Baumer, Smith College\n-   Amelia McNamara, University of St Thomas\n-   Nicholas J. Horton, Amherst College\n-   Colin W. Rundel, Duke University\n\n## coda {.smaller}\n\n::: columns\n::: {.column width=\"60%\"}\n> We are all converts to the tidyverse and have made a conscious choice to use it in our research and our teaching.\n> We each learned R without the tidyverse and have all spent quite a few years teaching without it at a variety of levels from undergraduate introductory statistics courses to graduate statistical computing courses.\n> This paper is a synthesis of the reasons supporting our tidyverse choice, along with benefits and challenges associated with teaching statistics with the tidyverse.\n:::\n\n::: {.column width=\"40%\"}\n[![](images/paper-tise.png){fig-alt=\"Screenshot of the paper titled \\\"An educator's perspective of the tidyverse\\\" from the journal (TISE) website. Shows the title of the paper, the names and affiliations of authors, and part of the abstract.\" width=\"500\"}](https://doi.org/10.5070/T514154352)\n:::\n:::\n\n::: aside\nÇetinkaya-Rundel, M., Hardin, J., Baumer, B. S., McNamara, A., Horton, N. J., & Rundel, C.\n(2022).\nAn educator's perspective of the tidyverse.\nTechnology Innovations in Statistics Education, 14(1).\n[doi.org/10.5070/T514154352](https://doi.org/10.5070/T514154352).\n:::\n\n# thank you! {background-image=\"images/tidyverse-celestial.png\" aria-label=\"A galaxy of tidyverse-related hex stickers.\" background-opacity=\"0.5\"}\n\n[bit.ly/tidyperspective-dds](https://bit.ly/tidyperspective-dds)\n",
    "supporting": [
      "dds_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}